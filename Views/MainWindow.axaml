<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:GeFeSLE.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="https://github.com/whistyun/Markdown.Avalonia"
        xmlns:controls="using:GeFeSLE.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="GeFeSLE.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="GeFeSLE">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <TabControl>
        <TabItem Header="Main">
            <!-- Use Grid instead of ScrollViewer + StackPanel to allow flexible sizing -->
            <Grid Margin="20" RowDefinitions="Auto,Auto,Auto,*,Auto" MinHeight="400">
                <!-- Row 0: Lists Section -->
                <StackPanel Grid.Row="0" Spacing="8" Margin="0,0,0,10">
                    <!-- Dropdown and Refresh Button Row -->
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <ComboBox ItemsSource="{Binding AvailableLists}" 
                                  SelectedItem="{Binding SelectedList}"
                                  DisplayMemberBinding="{Binding Name}"
                                  PlaceholderText="{Binding DropdownPlaceholder}"
                                  MinWidth="200"/>
                        <Button Content="Refresh" Command="{Binding LoadListsCommand}" MinWidth="80"/>
                    </StackPanel>
                    
                    <!-- Metadata Panel Toggle Button -->
                    <StackPanel Orientation="Horizontal" Spacing="10" 
                                IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <Button Command="{Binding ToggleMetadataPanelCommand}" MinWidth="120">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal" Spacing="5">
                                    <TextBlock Text="{Binding MetadataPanelExpanded, Converter={x:Static vm:BoolToExpanderTextConverter.Instance}}"/>
                                    <TextBlock Text="â€¢" IsVisible="{Binding HasListMetadata}" 
                                               Foreground="Orange" FontWeight="Bold" ToolTip.Tip="List has description/comment"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <!-- Row 1: Selected List Info (Collapsible) -->
                <StackPanel Grid.Row="1" IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Spacing="10" Margin="0,0,0,10">
                    <!-- Metadata Section (Collapsible) -->
                    <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="5" Padding="15"
                            Background="#F8F8F8" IsVisible="{Binding MetadataPanelExpanded}">
                        <StackPanel Spacing="10">
                            <TextBlock Text="List Information" FontWeight="Bold" FontSize="14" Foreground="Black"/>
                            
                            <!-- Basic Metadata -->
                            <StackPanel Spacing="5">
                                <TextBlock Text="{Binding SelectedList.Visibility, StringFormat='Visibility: {0}'}" Foreground="Black"/>
                                <TextBlock Text="{Binding SelectedList.CreatedBy, StringFormat='Created by: {0}'}" Foreground="Black"
                                           IsVisible="{Binding SelectedList.CreatedBy, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
                                <TextBlock Text="{Binding SelectedList.CreatedDate, StringFormat='Created: {0:yyyy-MM-dd HH:mm}'}" Foreground="Black"/>
                                <TextBlock Text="{Binding SelectedList.ModifiedDate, StringFormat='Modified: {0:yyyy-MM-dd HH:mm}'}" Foreground="Black"/>
                            </StackPanel>
                            
                            <!-- Description/Comment Section -->
                            <StackPanel Spacing="5" IsVisible="{Binding SelectedList.Comment, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                <TextBlock Text="Description" FontWeight="Bold" FontSize="12" Foreground="Black"/>
                                <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="10"
                                        Background="Black">
                                    <md:MarkdownScrollViewer Markdown="{Binding SelectedList.Comment}"/>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Row 2: Items Label -->
                <TextBlock Grid.Row="2" Text="Items" FontWeight="Bold" FontSize="16" 
                           IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                           Margin="0,0,0,5"/>
                
                <!-- Row 3: Items List (Takes all remaining space) -->
                <Grid Grid.Row="3" IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                    <!-- Loading indicator -->
                    <TextBlock Text="Loading items..." IsVisible="{Binding IsLoadingItems}" 
                               FontStyle="Italic" Foreground="Gray"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <!-- Items list with full height expansion -->
                    <ScrollViewer Name="ItemsScrollViewer"
                                  IsVisible="{Binding !IsLoadingItems}"
                                  HorizontalScrollBarVisibility="Disabled" 
                                  VerticalScrollBarVisibility="Auto">
                        <ListBox ItemsSource="{Binding ListItems}" 
                                 Background="Transparent" 
                                 BorderThickness="0"
                                 HorizontalAlignment="Stretch"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <!-- Enhanced item template with HTML support and expansion -->
                                    <Border BorderBrush="White" BorderThickness="1" CornerRadius="3" 
                                            Padding="6" Background="Black"
                                            HorizontalAlignment="Stretch"
                                            Margin="0,0,0,2">
                                        
                                        <Grid RowDefinitions="Auto,Auto">
                                            <!-- Row 0: Item header with separate click areas -->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/> <!-- Checkbox -->
                                                    <ColumnDefinition Width="*"/>    <!-- Item name and tags -->
                                                    <ColumnDefinition Width="Auto"/> <!-- Completion status -->
                                                    <ColumnDefinition Width="Auto"/> <!-- Expansion button -->
                                                </Grid.ColumnDefinitions>
                                                
                                                <!-- Checkbox -->
                                                <CheckBox Grid.Column="0" 
                                                          IsChecked="{Binding IsComplete}" 
                                                          IsEnabled="False" 
                                                          VerticalAlignment="Center"
                                                          Margin="0,0,10,0"/>
                                                
                                                <!-- Item name and tags -->
                                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                                    <!-- Item name - clickable if it's a URI -->
                                                    <Button IsVisible="{Binding IsNameClickable}"
                                                            Command="{Binding DataContext.OpenItemUriCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                            CommandParameter="{Binding}"
                                                            Background="Transparent"
                                                            BorderThickness="0"
                                                            Padding="0"
                                                            HorizontalAlignment="Stretch"
                                                            HorizontalContentAlignment="Left"
                                                            Cursor="Hand"
                                                            Margin="0,0,0,2">
                                                        <TextBlock Text="{Binding Name, FallbackValue='[No Name]', TargetNullValue='[No Name]'}" 
                                                                   FontWeight="SemiBold"
                                                                   Foreground="LightBlue"
                                                                   TextDecorations="Underline"
                                                                   TextWrapping="Wrap"/>
                                                    </Button>
                                                    
                                                    <!-- Item name - non-clickable version -->
                                                    <TextBlock IsVisible="{Binding !IsNameClickable}"
                                                               Text="{Binding Name, FallbackValue='[No Name]', TargetNullValue='[No Name]'}" 
                                                               FontWeight="SemiBold"
                                                               Foreground="White"
                                                               TextWrapping="Wrap"
                                                               Margin="0,0,0,2"/>
                                                    
                                                    <!-- Tags -->
                                                    <ItemsControl ItemsSource="{Binding Tags}" IsVisible="{Binding Tags.Count}">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border Background="DodgerBlue" 
                                                                        CornerRadius="8" 
                                                                        Padding="4,2"
                                                                        Margin="0,0,4,2">
                                                                    <TextBlock Text="{Binding}" 
                                                                               Foreground="White" 
                                                                               FontSize="9"
                                                                               FontWeight="Medium"/>
                                                                </Border>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                                
                                                <!-- Completion status -->
                                                <TextBlock Grid.Column="2"
                                                           Text="âœ“" 
                                                           IsVisible="{Binding IsComplete}"
                                                           VerticalAlignment="Center" 
                                                           Foreground="LightGreen"
                                                           FontSize="14"
                                                           Margin="10,0,5,0"/>
                                                
                                                <!-- Expansion button - ONLY this area triggers expand/collapse -->
                                                <Button Grid.Column="3"
                                                        Command="{Binding DataContext.ToggleItemExpansionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        Background="Transparent"
                                                        BorderThickness="0"
                                                        Padding="8,4"
                                                        VerticalAlignment="Center"
                                                        IsVisible="{Binding Comment, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                                    <TextBlock Text="{Binding IsExpanded, Converter={x:Static vm:BoolToExpanderTextConverter.Instance}}"
                                                               Foreground="LightBlue"
                                                               FontSize="12"/>
                                                </Button>
                                            </Grid>
                                            
                                            <!-- Row 1: Expandable content (comment with HTML) - NOT clickable -->
                                            <Border Grid.Row="1" 
                                                    IsVisible="{Binding IsExpanded}"
                                                    Margin="0,8,0,0"
                                                    MaxHeight="400"
                                                    Background="Black">
                                                <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                              HorizontalScrollBarVisibility="Disabled">
                                                    <controls:RichHtmlControl 
                                                        HtmlContent="{Binding Comment, FallbackValue='', TargetNullValue=''}"
                                                        Background="Black"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Top"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Grid>
                                        </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                    
                    <!-- Empty state -->
                    <TextBlock Text="No items in this list" IsVisible="{Binding !IsLoadingItems}" 
                               FontStyle="Italic" Foreground="Gray"
                               HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.IsVisible>
                            <MultiBinding Converter="{x:Static vm:AllTrueConverter.Instance}">
                                <Binding Path="!IsLoadingItems"/>
                                <Binding Path="ListItems.Count" Converter="{x:Static vm:CountToZeroConverter.Instance}"/>
                            </MultiBinding>
                        </TextBlock.IsVisible>
                    </TextBlock>
                </Grid>
                
                <!-- Row 4: Status Message -->
                <TextBlock Grid.Row="4" Text="{Binding StatusMessage}" 
                           IsVisible="{Binding StatusMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                           Foreground="Blue" Margin="0,15,0,0"/>
            </Grid>
        </TabItem>
        <TabItem Header="Settings">
            <ScrollViewer>
                <StackPanel Margin="20" Spacing="15">
                    <!-- Server Configuration -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Server URL:" FontWeight="Bold"/>
                        <TextBox Text="{Binding SettingsViewModel.ServerUrl}" Watermark="http://localhost:5000"/>
                    </StackPanel>
                    <!-- Authentication -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Authentication" FontWeight="Bold"/>
                        <!-- Login Form (visible when not logged in) -->
                        <StackPanel IsVisible="{Binding SettingsViewModel.IsLoggedIn, Converter={x:Static vm:InverseBooleanConverter.Instance}}" Spacing="8">
                            <TextBlock Text="Username:"/>
                            <TextBox Text="{Binding SettingsViewModel.Username}"/>
                            <TextBlock Text="Password:"/>
                            <TextBox PasswordChar="*" Text="{Binding SettingsViewModel.Password}"/>
                            <CheckBox Content="Remember login" IsChecked="{Binding SettingsViewModel.RememberLogin}"/>
                            <Button Content="Login" Command="{Binding SettingsViewModel.LoginCommand}"/>
                        </StackPanel>
                        <!-- Logout Section (visible when logged in) -->
                        <StackPanel IsVisible="{Binding SettingsViewModel.IsLoggedIn}" Spacing="8">
                            <TextBlock Text="{Binding SettingsViewModel.Username, StringFormat='Logged in as: {0}'}" FontWeight="Bold"/>
                            <Button Content="Logout" Command="{Binding SettingsViewModel.LogoutCommand}"/>
                        </StackPanel>
                        <!-- Test Connection button - always visible -->
                        <Button Content="Test Connection" Command="{Binding SettingsViewModel.TestConnectionCommand}"/>
                        
                        <!-- Hotkey Configuration -->
                        <TextBlock Text="Hotkey Configuration" FontWeight="Bold" Margin="0,20,0,0"/>
                        <StackPanel Spacing="8">
                            <TextBlock Text="Toggle Window Hotkey:" TextWrapping="Wrap"/>
                            <StackPanel Orientation="Horizontal" Spacing="10">
                                <ComboBox x:Name="ModifiersComboBox" Width="150" 
                                          ItemsSource="{Binding SettingsViewModel.AvailableModifiers}"
                                          SelectedItem="{Binding SettingsViewModel.SelectedModifiers}"/>
                                <TextBlock Text="+" VerticalAlignment="Center"/>
                                <ComboBox x:Name="KeyComboBox" Width="100"
                                          ItemsSource="{Binding SettingsViewModel.AvailableKeys}"
                                          SelectedItem="{Binding SettingsViewModel.SelectedKey}"/>
                                <Button Content="Apply" Command="{Binding SettingsViewModel.ApplyHotkeyCommand}"/>
                            </StackPanel>
                            <TextBlock Text="{Binding SettingsViewModel.HotkeyStatus}" 
                                       Foreground="{Binding SettingsViewModel.HotkeyStatusColor}"
                                       TextWrapping="Wrap"/>
                            <TextBlock Text="Tip: On Linux, click the system tray icon to toggle window visibility, or set up a custom shortcut in your desktop environment settings."
                                       FontSize="11" Foreground="Gray" TextWrapping="Wrap" Margin="0,5,0,0"/>
                        </StackPanel>
                    </StackPanel>
                    <!-- Status Message -->
                    <TextBlock Text="{Binding SettingsViewModel.StatusMessage}" 
                               IsVisible="{Binding SettingsViewModel.StatusMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                               Foreground="Blue"/>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>

</Window>
