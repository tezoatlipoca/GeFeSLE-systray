<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:GeFeSLE.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="https://github.com/whistyun/Markdown.Avalonia"
        xmlns:controls="using:GeFeSLE.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="GeFeSLE.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="GeFeSLE">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Styles>
        <!-- Style for search TextBoxes to maintain black background -->
        <Style Selector="TextBox.search">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="TextBox.search:focus">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="DodgerBlue"/>
        </Style>
        <Style Selector="TextBox.search:pointerover">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
        </Style>
        
        <!-- Style for ScrollViewer to keep scrollbar always visible and not overlapping -->
        <Style Selector="ScrollViewer.alwaysVisible">
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        </Style>
        <Style Selector="ScrollViewer.alwaysVisible /template/ ScrollBar:vertical">
            <Setter Property="Background" Value="#40000000"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style Selector="ScrollViewer.alwaysVisible /template/ ScrollBar:vertical /template/ Thumb">
            <Setter Property="Background" Value="#80FFFFFF"/>
            <Setter Property="BorderBrush" Value="#80FFFFFF"/>
        </Style>
        
        <!-- Styles for settings panel buttons to maintain visibility on hover -->
        <Style Selector="Button.settingsLogin">
            <Setter Property="Background" Value="DodgerBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="Button.settingsLogin:pointerover">
            <Setter Property="Background" Value="RoyalBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style Selector="Button.settingsLogin:pressed">
            <Setter Property="Background" Value="MediumBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style Selector="Button.settingsLogout">
            <Setter Property="Background" Value="Crimson"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="Button.settingsLogout:pointerover">
            <Setter Property="Background" Value="DarkRed"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style Selector="Button.settingsLogout:pressed">
            <Setter Property="Background" Value="Maroon"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style Selector="Button.settingsTest">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="Button.settingsTest:pointerover">
            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style Selector="Button.settingsTest:pressed">
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style Selector="Button.settingsApply">
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="Button.settingsApply:pointerover">
            <Setter Property="Background" Value="DarkOrange"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style Selector="Button.settingsApply:pressed">
            <Setter Property="Background" Value="OrangeRed"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Window.Styles>

    <!-- Main layout without tabs - use Grid for overlay capability -->
    <Grid>
        <!-- Main content (always visible) -->
        <Grid Margin="10" RowDefinitions="Auto,Auto,Auto,Auto,*,Auto" MinHeight="400">
            <!-- Row 0: Lists Section -->
            <StackPanel Grid.Row="0" Spacing="8" Margin="0,0,0,10">
                <!-- Flexible layout that wraps controls when window is narrow -->
                <DockPanel LastChildFill="False">
                    <!-- Settings cog docked to the right to keep it always visible -->
                    <Button DockPanel.Dock="Right"
                            Command="{Binding ToggleSettingsPanelCommand}" 
                            Background="Transparent" 
                            BorderThickness="0"
                            Padding="8"
                            ToolTip.Tip="Settings"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                        <TextBlock Text="⚙️" FontSize="16"/>
                    </Button>
                    
                    <!-- Wrap panel for the main controls that can wrap when needed -->
                    <WrapPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <ComboBox ItemsSource="{Binding AvailableLists}" 
                                  SelectedItem="{Binding SelectedList}"
                                  DisplayMemberBinding="{Binding Name}"
                                  PlaceholderText="{Binding DropdownPlaceholder}"
                                  MinWidth="200"
                                  Margin="0,0,10,5"/>
                        <Button Content="Refresh" 
                                Command="{Binding LoadListsCommand}" 
                                MinWidth="80"
                                Margin="0,0,10,5"/>
                        
                        <!-- Add New Item button -->
                        <Button Content="+ Add Item"
                                Command="{Binding AddNewItemCommand}"
                                IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                Background="DarkGreen"
                                Foreground="White"
                                Padding="8,4"
                                BorderThickness="0"
                                Margin="0,0,10,5"/>
                        
                        <!-- Metadata Panel Toggle Button -->
                        <Button Command="{Binding ToggleMetadataPanelCommand}" 
                                MinWidth="120"
                                IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                Margin="0,0,10,5">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal" Spacing="5">
                                    <TextBlock Text="{Binding MetadataPanelExpanded, Converter={x:Static vm:BoolToExpanderTextConverter.Instance}}"/>
                                    <TextBlock Text="•" IsVisible="{Binding HasListMetadata}" 
                                               Foreground="Orange" FontWeight="Bold" ToolTip.Tip="List has description/comment"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        
                        <!-- Combined status field -->
                        <TextBlock Text="{Binding CombinedStatus}" 
                                   IsVisible="{Binding CombinedStatus, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                   Foreground="Orange" FontSize="11" FontStyle="Italic"
                                   VerticalAlignment="Center"
                                   Margin="0,0,10,5"/>
                    </WrapPanel>
                </DockPanel>
            </StackPanel>

            <!-- Row 1: Selected List Info (Collapsible) -->
            <StackPanel Grid.Row="1" IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Spacing="10" Margin="0,0,0,10">
                <!-- Metadata Section (Collapsible) -->
                <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="5" Padding="15"
                        Background="#F8F8F8" IsVisible="{Binding MetadataPanelExpanded}">
                    <StackPanel Spacing="10">
                        <TextBlock Text="List Information" FontWeight="Bold" FontSize="14" Foreground="Black"/>
                        
                        <!-- Basic Metadata -->
                        <StackPanel Spacing="5">
                            <TextBlock Text="{Binding SelectedList.Visibility, StringFormat='Visibility: {0}'}" Foreground="Black"/>
                            <TextBlock Text="{Binding SelectedList.CreatedBy, StringFormat='Created by: {0}'}" Foreground="Black"
                                       IsVisible="{Binding SelectedList.CreatedBy, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
                            <TextBlock Text="{Binding SelectedList.CreatedDate, StringFormat='Created: {0:yyyy-MM-dd HH:mm}'}" Foreground="Black"/>
                            <TextBlock Text="{Binding SelectedList.ModifiedDate, StringFormat='Modified: {0:yyyy-MM-dd HH:mm}'}" Foreground="Black"/>
                        </StackPanel>
                        
                        <!-- Description/Comment Section -->
                        <StackPanel Spacing="5" IsVisible="{Binding SelectedList.Comment, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                            <TextBlock Text="Description" FontWeight="Bold" FontSize="12" Foreground="Black"/>
                            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="10"
                                    Background="Black">
                                <md:MarkdownScrollViewer Markdown="{Binding SelectedList.Comment}"/>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!-- Row 2: Removed separate status message (now combined into CombinedStatus) -->
            
            <!-- Row 3: Search Controls -->
            <WrapPanel Grid.Row="3" 
                       Orientation="Horizontal"
                       IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                       Margin="0,0,0,10">
                
                <!-- Text Search -->
                <TextBox Text="{Binding TextSearchQuery}" 
                         Watermark="Search in item names and comments..."
                         Classes="search"
                         FontSize="12"
                         Padding="8,6"
                         MinWidth="200"
                         Width="300"
                         Margin="0,0,8,0"/>
                
                <!-- Tags Search -->
                <TextBox Text="{Binding TagsSearchQuery}" 
                         Watermark="Search for tags..."
                         Classes="search"
                         FontSize="12"
                         Padding="8,6"
                         MinWidth="200"
                         Width="300"
                         Margin="0,0,8,0"/>
                
                <!-- Clear Button -->
                <Button Command="{Binding ClearSearchCommand}"
                        Content="Clear"
                        FontSize="12"
                        Padding="12,6"
                        Background="DarkGray"
                        Foreground="White"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        VerticalAlignment="Center"/>
            </WrapPanel>
            
            <!-- Row 4: Items List (Takes all remaining space) -->
            <Grid Grid.Row="4" IsVisible="{Binding SelectedList, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                <!-- Loading indicator -->
                <TextBlock Text="Loading items..." IsVisible="{Binding IsLoadingItems}" 
                           FontStyle="Italic" Foreground="Gray"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                
                <!-- Items list with full height expansion -->
                <ScrollViewer Name="ItemsScrollViewer"
                              Classes="alwaysVisible"
                              IsVisible="{Binding !IsLoadingItems}"
                              HorizontalScrollBarVisibility="Disabled" 
                              VerticalScrollBarVisibility="Visible"
                              Padding="0,0,0,0"
                              Margin="0">
                    <ListBox ItemsSource="{Binding ListItems}" 
                             Background="Transparent" 
                             BorderThickness="0"
                             HorizontalAlignment="Stretch"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             Padding="0,0,18,0"
                             Margin="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <!-- Enhanced item template with HTML support and expansion -->
                                <Border BorderBrush="White" BorderThickness="1" CornerRadius="3" 
                                        Padding="6" Background="Black"
                                        HorizontalAlignment="Stretch"
                                        Margin="0,0,0,2">
                                    
                                    <Grid RowDefinitions="Auto,Auto">
                                        <!-- Row 0: Item header with separate click areas -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/> <!-- Item position -->
                                                <ColumnDefinition Width="Auto"/> <!-- Checkbox -->
                                                <ColumnDefinition Width="*"/>    <!-- Item name and tags -->
                                                <ColumnDefinition Width="Auto"/> <!-- Completion status -->
                                                <ColumnDefinition Width="Auto"/> <!-- Edit balloon -->
                                                <ColumnDefinition Width="Auto"/> <!-- Delete balloon -->
                                                <ColumnDefinition Width="Auto"/> <!-- Move balloon -->
                                                <ColumnDefinition Width="Auto"/> <!-- Expansion button -->
                                            </Grid.ColumnDefinitions>
                                            
                                            <!-- Item position -->
                                            <TextBlock Grid.Column="0"
                                                       Text="{Binding DisplayPosition, StringFormat='[{0}]'}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Gray"
                                                       FontSize="11"
                                                       FontWeight="Medium"
                                                       Margin="0,0,10,0"/>
                                            
                                            <!-- Checkbox -->
                                            <CheckBox Grid.Column="1" 
                                                      IsChecked="{Binding IsComplete}" 
                                                      IsEnabled="False" 
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,10,0"/>
                                            
                                            <!-- Item name and tags -->
                                            <StackPanel Grid.Column="2" VerticalAlignment="Center">
                                                <!-- Item name - clickable if it's a URI -->
                                                <Button IsVisible="{Binding IsNameClickable}"
                                                        Command="{Binding DataContext.OpenItemUriCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        Background="Transparent"
                                                        BorderThickness="0"
                                                        Padding="0"
                                                        HorizontalAlignment="Stretch"
                                                        HorizontalContentAlignment="Left"
                                                        Cursor="Hand"
                                                        Margin="0,0,0,2">
                                                    <TextBlock Text="{Binding Name, FallbackValue='[No Name]', TargetNullValue='[No Name]'}" 
                                                               FontWeight="SemiBold"
                                                               Foreground="LightBlue"
                                                               TextDecorations="Underline"
                                                               TextWrapping="Wrap"/>
                                                </Button>
                                                
                                                <!-- Item name - non-clickable version -->
                                                <TextBlock IsVisible="{Binding !IsNameClickable}"
                                                           Text="{Binding Name, FallbackValue='[No Name]', TargetNullValue='[No Name]'}" 
                                                           FontWeight="SemiBold"
                                                           Foreground="White"
                                                           TextWrapping="Wrap"
                                                           Margin="0,0,0,2"/>
                                                
                                                <!-- Tags -->
                                                <ItemsControl ItemsSource="{Binding Tags}" IsVisible="{Binding Tags.Count}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Border Background="DodgerBlue" 
                                                                    CornerRadius="8" 
                                                                    Padding="4,2"
                                                                    Margin="0,0,4,2">
                                                                <TextBlock Text="{Binding}" 
                                                                           Foreground="White" 
                                                                           FontSize="9"
                                                                           FontWeight="Medium"/>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                            
                                            <!-- Completion status -->
                                            <TextBlock Grid.Column="3"
                                                       Text="✓" 
                                                       IsVisible="{Binding IsComplete}"
                                                       VerticalAlignment="Center" 
                                                       Foreground="LightGreen"
                                                       FontSize="14"
                                                       Margin="10,0,5,0"/>
                                            
                                            <!-- Edit balloon (only visible when expanded) -->
                                            <Button Grid.Column="4"
                                                    IsVisible="{Binding IsExpanded}"
                                                    Background="OrangeRed" 
                                                    CornerRadius="8" 
                                                    Padding="6,3"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,4,0"
                                                    BorderThickness="0"
                                                    Command="{Binding DataContext.EditItemCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"
                                                    Cursor="Hand">
                                                <TextBlock Text="Edit" 
                                                           Foreground="White" 
                                                           FontSize="10"
                                                           FontWeight="Medium"/>
                                            </Button>
                                            
                                            <!-- Delete balloon (only visible when expanded) -->
                                            <Button Grid.Column="5"
                                                    IsVisible="{Binding IsExpanded}"
                                                    Background="Red" 
                                                    CornerRadius="8" 
                                                    Padding="6,3"
                                                    VerticalAlignment="Center"
                                                    Margin="4,0,8,0"
                                                    BorderThickness="0"
                                                    Command="{Binding DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"
                                                    Cursor="Hand">
                                                <TextBlock Text="Delete" 
                                                           Foreground="White" 
                                                           FontSize="10"
                                                           FontWeight="Medium"/>
                                            </Button>
                                            
                                            <!-- Move balloon (only visible when expanded) -->
                                            <Button Grid.Column="6"
                                                    IsVisible="{Binding IsExpanded}"
                                                    Background="Orange" 
                                                    CornerRadius="8" 
                                                    Padding="6,3"
                                                    VerticalAlignment="Center"
                                                    Margin="8,0,8,0"
                                                    BorderThickness="0"
                                                    Command="{Binding DataContext.MoveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"
                                                    Cursor="Hand">
                                                <TextBlock Text="Move" 
                                                           Foreground="White" 
                                                           FontSize="10"
                                                           FontWeight="Medium"/>
                                            </Button>
                                            
                                            <!-- Expansion button - ONLY this area triggers expand/collapse -->
                                            <Button Grid.Column="7"
                                                    Command="{Binding DataContext.ToggleItemExpansionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Padding="8,4"
                                                    VerticalAlignment="Center"
                                                    IsVisible="{Binding Comment, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                                <TextBlock Text="{Binding IsExpanded, Converter={x:Static vm:BoolToExpanderTextConverter.Instance}}"
                                                           Foreground="LightBlue"
                                                           FontSize="12"/>
                                            </Button>
                                        </Grid>
                                        
                                        <!-- Row 1: Expandable content (comment with HTML) - NOT clickable -->
                                        <Border Grid.Row="1" 
                                                IsVisible="{Binding IsExpanded}"
                                                Margin="0,8,0,0"
                                                Background="Black">
                                            <controls:RichHtmlControl 
                                                HtmlContent="{Binding Comment, FallbackValue='', TargetNullValue=''}"
                                                Background="Black"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Top"/>
                                        </Border>
                                    </Grid>
                                    </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        
                        <!-- Ensure no extra spacing in the items panel -->
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Spacing="0" Margin="0"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        
                        <!-- Remove default item container styling that might add spacing -->
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                    </ListBox>
                </ScrollViewer>
                
                <!-- Empty state -->
                <TextBlock Text="No items in this list" IsVisible="{Binding !IsLoadingItems}" 
                           FontStyle="Italic" Foreground="Gray"
                           HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock.IsVisible>
                        <MultiBinding Converter="{x:Static vm:AllTrueConverter.Instance}">
                            <Binding Path="!IsLoadingItems"/>
                            <Binding Path="ListItems.Count" Converter="{x:Static vm:CountToZeroConverter.Instance}"/>
                        </MultiBinding>
                    </TextBlock.IsVisible>
                </TextBlock>
            </Grid>
            
            <!-- Row 5: Removed status message (moved to header) -->
        </Grid>
        
        <!-- Settings overlay panel (shows when SettingsPanelVisible is true) -->
        <Border IsVisible="{Binding SettingsPanelVisible}"
                Background="#E0000000"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <!-- Settings Card -->
            <Border Background="Black"
                    CornerRadius="8"
                    Margin="50"
                    MaxWidth="600"
                    MaxHeight="500"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <Grid RowDefinitions="Auto,*,Auto">
                    <!-- Header with close button -->
                    <Border Grid.Row="0" 
                            Background="DarkGray" 
                            CornerRadius="8,8,0,0" 
                            Padding="15,10">
                        <Grid ColumnDefinitions="*,Auto">
                            <TextBlock Grid.Column="0" 
                                       Text="Settings" 
                                       FontWeight="Bold" 
                                       FontSize="16" 
                                       Foreground="White"
                                       VerticalAlignment="Center"/>
                            <Button Grid.Column="1"
                                    Content="✕"
                                    Command="{Binding ToggleSettingsPanelCommand}"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FontSize="14"
                                    Foreground="White"
                                    Padding="8,4"/>
                        </Grid>
                    </Border>
                    
                    <!-- Settings content -->
                    <ScrollViewer Grid.Row="1">
                        <StackPanel Margin="20" Spacing="15">
                            <!-- Server Configuration -->
                            <StackPanel Spacing="8">
                                <TextBlock Text="Server URL:" FontWeight="Bold" Foreground="White"/>
                                <TextBox Text="{Binding SettingsViewModel.ServerUrl}" Watermark="http://localhost:5000"/>
                            </StackPanel>
                            
                            <!-- Authentication -->
                            <StackPanel Spacing="8">
                                <TextBlock Text="Authentication" FontWeight="Bold" Foreground="White"/>
                                
                                <!-- Login Form (visible when not logged in) -->
                                <StackPanel IsVisible="{Binding SettingsViewModel.IsLoggedIn, Converter={x:Static vm:InverseBooleanConverter.Instance}}" Spacing="8">
                                    <TextBlock Text="Username:" Foreground="White"/>
                                    <TextBox Text="{Binding SettingsViewModel.Username}"/>
                                    <TextBlock Text="Password:" Foreground="White"/>
                                    <TextBox PasswordChar="*" Text="{Binding SettingsViewModel.Password}"/>
                                    <CheckBox Content="Remember login" 
                                              IsChecked="{Binding SettingsViewModel.RememberLogin}"
                                              Foreground="White"/>
                                    <Button Content="Login" 
                                            Command="{Binding SettingsViewModel.LoginCommand}"
                                            Classes="settingsLogin"/>
                                </StackPanel>
                                
                                <!-- Logout Section (visible when logged in) -->
                                <StackPanel IsVisible="{Binding SettingsViewModel.IsLoggedIn}" Spacing="8">
                                    <TextBlock Text="{Binding SettingsViewModel.Username, StringFormat='Logged in as: {0}'}" FontWeight="Bold" Foreground="White"/>
                                    <Button Content="Logout" 
                                            Command="{Binding SettingsViewModel.LogoutCommand}"
                                            Classes="settingsLogout"/>
                                </StackPanel>
                                
                                <!-- Test Connection button - always visible -->
                                <Button Content="Test Connection" 
                                        Command="{Binding SettingsViewModel.TestConnectionCommand}"
                                        Classes="settingsTest"/>
                                
                                <!-- Hotkey Configuration -->
                                <TextBlock Text="Hotkey Configuration" FontWeight="Bold" Margin="0,20,0,0" Foreground="White"/>
                                <StackPanel Spacing="8">
                                    <TextBlock Text="Toggle Window Hotkey:" TextWrapping="Wrap" Foreground="White"/>
                                    <StackPanel Orientation="Horizontal" Spacing="10">
                                        <ComboBox x:Name="ModifiersComboBox" Width="150" 
                                                  ItemsSource="{Binding SettingsViewModel.AvailableModifiers}"
                                                  SelectedItem="{Binding SettingsViewModel.SelectedModifiers}"/>
                                        <TextBlock Text="+" VerticalAlignment="Center" Foreground="White"/>
                                        <ComboBox x:Name="KeyComboBox" Width="100"
                                                  ItemsSource="{Binding SettingsViewModel.AvailableKeys}"
                                                  SelectedItem="{Binding SettingsViewModel.SelectedKey}"/>
                                        <Button Content="Apply" 
                                                Command="{Binding SettingsViewModel.ApplyHotkeyCommand}"
                                                Classes="settingsApply"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding SettingsViewModel.HotkeyStatus}" 
                                               Foreground="{Binding SettingsViewModel.HotkeyStatusColor}"
                                               TextWrapping="Wrap"/>
                                    <TextBlock Text="Tip: On Linux, click the system tray icon to toggle window visibility, or set up a custom shortcut in your desktop environment settings."
                                               FontSize="11" Foreground="Gray" TextWrapping="Wrap" Margin="0,5,0,0"/>
                                </StackPanel>
                            </StackPanel>
                            
                            <!-- Status Message -->
                            <TextBlock Text="{Binding SettingsViewModel.StatusMessage}" 
                                       IsVisible="{Binding SettingsViewModel.StatusMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                       Foreground="Blue"/>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Border>
        
        <!-- Edit item overlay panel (shows when EditPanelVisible is true) -->
        <Border IsVisible="{Binding EditPanelVisible}"
                Background="#E0000000"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <!-- Edit Card -->
            <Border Background="Black"
                    CornerRadius="8"
                    Margin="50"
                    MaxWidth="700"
                    MaxHeight="600"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <Grid RowDefinitions="Auto,*,Auto">
                    <!-- Header with close button -->
                    <Border Grid.Row="0" 
                            Background="DarkGray" 
                            CornerRadius="8,8,0,0" 
                            Padding="15,10">
                        <Grid ColumnDefinitions="*,Auto">
                            <TextBlock Grid.Column="0" 
                                       FontWeight="Bold" 
                                       FontSize="16" 
                                       Foreground="White"
                                       VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} Item">
                                        <Binding Path="IsAddingNewItem" Converter="{x:Static vm:BoolToAddEditTextConverter.Instance}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Button Grid.Column="1"
                                    Content="✕"
                                    Command="{Binding ToggleEditPanelCommand}"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FontSize="14"
                                    Foreground="White"
                                    Padding="8,4"/>
                        </Grid>
                    </Border>
                    
                    <!-- Edit content -->
                    <ScrollViewer Grid.Row="1">
                        <StackPanel Margin="20" Spacing="15">
                            <!-- Item ID and List ID (read-only) - on single line -->
                            <StackPanel Spacing="8" IsVisible="{Binding !IsAddingNewItem}">
                                <TextBlock Text="Item Information" FontWeight="Bold" Foreground="White"/>
                                <Grid ColumnDefinitions="Auto,*,Auto,Auto,*" ColumnSpacing="10">
                                    <TextBlock Grid.Column="0" Text="Item ID:" Foreground="LightGray"/>
                                    <TextBlock Grid.Column="1" Text="{Binding CurrentEditItem.Id}" Foreground="White"/>
                                    <TextBlock Grid.Column="2" Text="List ID:" Foreground="LightGray" Margin="20,0,0,0"/>
                                    <TextBlock Grid.Column="3" Text="{Binding CurrentEditItem.ListId}" Foreground="White"/>
                                </Grid>
                            </StackPanel>
                            
                            <!-- List ID for new items -->
                            <StackPanel Spacing="8" IsVisible="{Binding IsAddingNewItem}">
                                <TextBlock Text="New Item Information" FontWeight="Bold" Foreground="White"/>
                                <Grid ColumnDefinitions="Auto,*" ColumnSpacing="10">
                                    <TextBlock Grid.Column="0" Text="List ID:" Foreground="LightGray"/>
                                    <TextBlock Grid.Column="1" Text="{Binding SelectedList.Id}" Foreground="White"/>
                                </Grid>
                            </StackPanel>
                            
                            <!-- Name field -->
                            <StackPanel Spacing="8">
                                <TextBlock Text="Name:" FontWeight="Bold" Foreground="White"/>
                                <TextBox Text="{Binding EditItemName}" 
                                         AcceptsReturn="false"
                                         TextWrapping="Wrap"
                                         MinHeight="30"/>
                            </StackPanel>
                            
                            <!-- Comment field -->
                            <StackPanel Spacing="8">
                                <TextBlock Text="Comment (Raw HTML/Markdown):" FontWeight="Bold" Foreground="White"/>
                                <TextBox Text="{Binding EditItemComment}" 
                                         AcceptsReturn="true"
                                         TextWrapping="Wrap"
                                         MinHeight="200"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                            </StackPanel>
                            
                            <!-- Tags field -->
                            <StackPanel Spacing="8">
                                <TextBlock Text="Tags:" FontWeight="Bold" Foreground="White"/>
                                <TextBlock Text="Separate tags with spaces. Use &quot;quotes&quot; for multi-word tags." 
                                           FontSize="10" 
                                           Foreground="LightGray" 
                                           FontStyle="Italic"/>
                                <TextBox Text="{Binding EditItemTags}" 
                                         AcceptsReturn="false"
                                         TextWrapping="Wrap"
                                         MinHeight="30"
                                         Watermark="Example: urgent &quot;bug fix&quot; frontend"/>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <!-- Validation error display -->
                    <Border IsVisible="{Binding EditValidationError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                            Background="DarkRed"
                            Padding="10,5"
                            Margin="20,0">
                        <TextBlock Text="{Binding EditValidationError}"
                                   Foreground="White"
                                   FontWeight="Bold"
                                   TextWrapping="Wrap"/>
                    </Border>
                    
                    <!-- Footer with action buttons -->
                    <Border Grid.Row="2" 
                            Background="DarkGray" 
                            CornerRadius="0,0,8,8" 
                            Padding="15,10">
                        <Grid ColumnDefinitions="*,Auto,Auto">
                            <!-- Status or help text with better visibility -->
                            <TextBlock Grid.Column="0" 
                                       Foreground="Yellow"
                                       FontSize="12"
                                       FontWeight="Medium"
                                       VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} will be saved to the server">
                                        <Binding Path="IsAddingNewItem" Converter="{x:Static vm:BoolToChangesNewItemTextConverter.Instance}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                                       
                            <!-- Cancel button -->
                            <Button Grid.Column="1"
                                    Content="Cancel"
                                    Command="{Binding ToggleEditPanelCommand}"
                                    Background="Gray"
                                    Foreground="White"
                                    Padding="12,6"
                                    Margin="0,0,10,0"
                                    BorderThickness="0"/>
                                    
                            <!-- Save button -->
                            <Button Grid.Column="2"
                                    Command="{Binding SaveEditItemCommand}"
                                    Background="Green"
                                    Foreground="White"
                                    Padding="12,6"
                                    BorderThickness="0">
                                <Button.Content>
                                    <MultiBinding StringFormat="{}{0}">
                                        <Binding Path="IsAddingNewItem" Converter="{x:Static vm:BoolToSaveButtonTextConverter.Instance}"/>
                                    </MultiBinding>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
        </Border>
        
        <!-- Move item overlay panel (shows when MovePanelVisible is true) -->
        <Border IsVisible="{Binding MovePanelVisible}"
                Background="#E0000000"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <!-- Move Card -->
            <Border Background="Black"
                    CornerRadius="8"
                    Padding="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Header -->
                    <Border Grid.Row="0" Background="Orange" CornerRadius="4" Padding="8" Margin="0,0,0,15">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                <TextBlock Text="📦" FontSize="16" Margin="0,0,8,0"/>
                                <TextBlock Foreground="White" 
                                           FontWeight="Bold" 
                                           FontSize="14"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Move Item {0} - {1}">
                                            <Binding Path="CurrentMoveItem.Id"/>
                                            <Binding Path="CurrentMoveItem.Name"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                            <Button Grid.Column="1"
                                    Content="✕" 
                                    Background="Transparent" 
                                    Foreground="White" 
                                    FontSize="14" 
                                    Padding="8,0" 
                                    Command="{Binding CancelMoveItemCommand}"
                                    BorderThickness="0"/>
                        </Grid>
                    </Border>
                    
                    <!-- Target list selection -->
                    <StackPanel Grid.Row="1">
                        <ListBox ItemsSource="{Binding AvailableMoveLists}"
                                 Background="DarkGray"
                                 BorderThickness="1"
                                 BorderBrush="Gray"
                                 MinHeight="200"
                                 MaxHeight="400"
                                 HorizontalAlignment="Stretch"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Button Background="Transparent"
                                            BorderThickness="0"
                                            Padding="12,8"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Left"
                                            Command="{Binding DataContext.ConfirmMoveItemCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Cursor="Hand">
                                        <Button.Styles>
                                            <Style Selector="Button:pointerover">
                                                <Setter Property="Background" Value="#40FFFFFF"/>
                                            </Style>
                                        </Button.Styles>
                                        <TextBlock Text="{Binding Name}" 
                                                   Foreground="White"
                                                   FontSize="12"
                                                   TextWrapping="Wrap"/>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
    </Grid>

</Window>
